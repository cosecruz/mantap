name: CI

on:
  push:
    branches:
      - dev
      - uat
      - main
      - "feature/**"
      - release/*
      - mtp*
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  test-frontend:
    name: Test Frontend on Node.js ${{ matrix.node_version }} and OS ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ["18.x", "20.x", "22.x", "23.x"]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache pnpm store
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('frontend/mantap-fe/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        working-directory: frontend

      - name: Build & Test
        run: |
          pnpm run build --if-present
          pnpm test
        working-directory: frontend

  test-backend:
    name: Test Backend on Node.js ${{ matrix.node_version }} and OS ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ["18.x", "20.x", "22.x", "23.x"]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache pnpm store
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('backend/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        working-directory: backend

      - name: Build & Test
        run: |
          pnpm run build --if-present
          pnpm test
        working-directory: backend
